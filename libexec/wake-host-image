#!/usr/bin/env ruby

require_relative '../share/wake/parser'
require_relative '../share/wake/panic'
require_relative '../share/wake/root'
require_relative '../share/wake/config'
require_relative '../share/wake/azure/config'
require_relative '../share/wake/run'


parser = OptsParser.parse do |opts|
  opts.banner = "Usage: wake host image [options]"

  opts.required :p, :provider, "Specify the cloud provider on which to create the host"
  opts.boolean  :save, "Save the image as the default host image. Enabled by default."
  opts.boolean  :v, :verbose,  "Run verbosely"
end

VALID_PROVIDERS = [:azure]

def validate_provider(provider)
  unless VALID_PROVIDERS.include?(provider.to_sym)
    panic!("#{provider} is not a valid cloud provider. The following cloud providers are supported: #{VALID_PROVIDERS.join(",")}")
  end
end

provider = parser[:provider].to_sym

validate_provider(provider)

if provider == :azure
  # TODO: Ensure that the packer azure plugin is installed:
  # https://github.com/MSOpenTech/packer-azure

  publish_settings = Wake::Azure::Config.get_publish_settings!
  azure_template = File.join(WAKE_ROOT, "hosts","azure.json")
  azure_subscription_name = WakeConfig.get_or_ask_for("azure.subscription.name")
  azure_storage_account = WakeConfig.get_or_ask_for("azure.storage.account")

  raise "wake-host-image doesn't work yet"

  puts "Successfull created image with name: #{image_name}"

  unless parser[:save] == false
    puts
    puts "Saving '#{image_name}' as default image name"
    WakeConfig.update("azure.host.default_image_name", image_name)
  end
end
