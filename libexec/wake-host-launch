#!/usr/bin/env ruby

require_relative '../share/wake/parser'
require_relative '../share/wake/config'
require_relative '../share/wake/panic'
require_relative '../share/wake/azure/virtual_machines'

parser = OptsParser.parse do |opts|
  opts.banner = "Usage: wake host launch [options]"

  opts.required :p, :provider, "Specify the cloud provider on which to create the host"
  opts.optional :i, :image, "Specify the id of the image to be run on the host"
  opts.optional :l, :location, "Specify the location where the host will be deplayed"
  opts.optional :s, :size, "Specify the size of the host"
  opts.boolean  :v, :verbose,  "Run verbosely"
end

if parser[:provider].to_sym == :azure
  image_name = parser[:image] || WakeConfig.get_or_ask_for("azure.host.default_image_name")
  location = parser[:location] || WakeConfig.get_or_ask_for("azure.host.default_location")
  size = parser[:size] || WakeConfig.get_or_ask_for("azure.host.default_size")
  name = "wake-#{5.times.map { ('a'..'z').to_a[rand(26)] }.join }"

  # TODO make configurable
  key = File.expand_path(File.join("~",".ssh", "id_rsa"))

  params = {
    vm_name: 'vm',
    vm_user: `whoami`.chomp, #TODO: support Windows
    image: image_name,
    location: location
  }

  options = {
    cloud_service_name: name,
    private_key_file: key,
    vm_size: size
  }

  vm_manager = Wake::Azure::VirtualMachines.vm_manager
  vm = vm_manager.create_virtual_machine(params, options)

  puts "Successfully created a host with id: #{vm.vm_name}:#{vm.cloud_service_name} and IP address #{vm.ipaddress}"
end
