#!/bin/bash

set -x
set -e

# clear rc.local

# fix the hostname to actually be in etc hosts

mv fix_hostname /opt/fix_hostname
chmod 755 /opt/fix_hostname
echo /opt/fix_hostname | tee -a /etc/rc.local

# docker

wget -qO- https://get.docker.com/ | sh
sleep 10

echo "Waiting on docker to boot up..."
last_exit="1"
while [[ $last_exit != "0" ]]; do
  docker ps > /dev/null
  last_exit=$?
done

docker login -u "<%= docker_user.username %>" -p "<%= docker_user.password %>" -e "<%= docker_user.email %>"
sleep 10

cp ~/.docker/config.json /opt/docker-auth.json

# update

apt-get update

# packages

apt-get -y install htop dnsmasq

# config

mkdir -p /opt/config

# docker-compose

mv docker.conf /etc/default/docker

mv operator.json /opt/config/operator.json
mv operator_boot /opt/operator_boot

chown root:root /etc/default/docker
chown root:root -R /opt/config
chown root:root /opt/operator_boot

chmod 644 /etc/default/docker
chmod 644 -R /opt/config
chmod 755 /opt/operator_boot

echo "/opt/operator_boot" | tee -a /etc/rc.local

# DNS

mv dnsmasq.conf /etc/dnsmasq.conf

# SSH

mv sshd_config /etc/ssh/sshd_config

touch 10-users

<% fetch_collaborators.each do |name, public_key| %>

echo "<%= name %> ALL=(ALL) NOPASSWD:ALL" | tee 10-users

if ! grep -q <%= name %> /etc/passwd; then
  adduser --disabled-password --gecos "" <%= name %>
fi

mkdir -p /home/<%= name %>/.ssh
echo "<%= public_key %>" | tee /home/<%= name %>/.ssh/authorized_keys
chmod 600 /home/<%= name %>/.ssh/authorized_keys # must be 600
chown -R <%= name %>:<%= name %> /home/<%= name %>

<% end %>

mv 10-users /etc/sudoers.d/
chown root:root /etc/sudoers.d/10-users
chmod 440 /etc/sudoers.d/10-users # must be 440

# this must be last

# rm /etc/sudoers.d/90-cloud-init-users
